import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

class Customer {
    private String name;
    private String email;
    private String password;

    public Customer(String name, String email, String password) {
        this.name = name;
        this.email = email;
        this.password = password;
    }

    public String getName() {
        return name;
    }

    public String getEmail() {
        return email;
    }

    public String getPassword() {
        return password;
    }
}

class FoodItem {
    private String name;
    private double price;
    private double calories;
    private double proteinContent; 
    private double carbohydrates;  
    private double fats;            

    public FoodItem(String name, double price, double calories, double proteinContent, double carbohydrates, double fats) {
        this.name = name;
        this.price = price;
        this.calories = calories;
        this.proteinContent = proteinContent;
        this.carbohydrates = carbohydrates;
        this.fats = fats;
    }

    public String getName() {
        return name;
    }

    public double getPrice() {
        return price;
    }

    public double getCalories() {
        return calories;
    }

    public double getProteinContent() {
        return proteinContent;
    }

    public double getCarbohydrates() {
        return carbohydrates;
    }

    public double getFats() {
        return fats;
    }

    @Override
    public String toString() {
        return "Food: " + name + ", Price: $" + price + ", Calories: " + calories + " kcal, Protein: " + proteinContent + "g, Carbs: " + carbohydrates + "g, Fats: " + fats + "g";
    }
}

public class Main {
    private static Map<String, Customer> customers = new HashMap<>();
    private static Map<String, FoodItem> menu = new HashMap<>();

    public static void main(String[] args) {
      
        menu.put("Burger", new FoodItem("Burger", 5.99, 450, 25, 40, 20));
        menu.put("Salad", new FoodItem("Salad", 4.99, 150, 5, 15, 7));
        menu.put("Steak", new FoodItem("Steak", 15.99, 700, 40, 5, 50));
        menu.put("Smoothie", new FoodItem("Smoothie", 3.99, 200, 8, 30, 5));

        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Welcome to the Restaurant Management App");
            System.out.println("1. Register");
            System.out.println("2. Login");
            System.out.println("3. View Menu");
            System.out.println("4. Exit");

            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    register(scanner);
                    break;
                case 2:
                    if (login(scanner)) {
                        orderFood(scanner);
                    }
                    break;
                case 3:
                    viewMenu();
                    break;
                case 4:
                    System.out.println("Exiting...");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }

    private static void register(Scanner scanner) {
        System.out.println("Enter your name: ");
        String name = scanner.nextLine();
        System.out.println("Enter your email: ");
        String email = scanner.nextLine();
        System.out.println("Enter your password: ");
        String password = scanner.nextLine();

        if (customers.containsKey(email)) {
            System.out.println("An account with this email already exists.");
        } else {
            customers.put(email, new Customer(name, email, password));
            System.out.println("Registration successful! You can now log in.");
        }
    }

    private static boolean login(Scanner scanner) {
        System.out.println("Enter your email: ");
        String email = scanner.nextLine();
        System.out.println("Enter your password: ");
        String password = scanner.nextLine();

        Customer customer = customers.get(email);
        if (customer != null && customer.getPassword().equals(password)) {
            System.out.println("Login successful! Welcome, " + customer.getName());
            return true;
        } else {
            System.out.println("Invalid email or password.");
            return false;
        }
    }

    private static void viewMenu() {
        System.out.println("Menu:");
        for (FoodItem item : menu.values()) {
            System.out.println(item);
        }
    }

    private static void orderFood(Scanner scanner) {
        viewMenu();

        Map<FoodItem, Integer> order = new HashMap<>();
        double totalCost = 0;

        while (true) {
            System.out.println("Enter the name of the food item to order (or type 'done' to finish): ");
            String itemName = scanner.nextLine();

            if (itemName.equalsIgnoreCase("done")) {
                break;
            }

            FoodItem item = menu.get(itemName);

            if (item != null) {
                System.out.println("Enter the quantity: ");
                int quantity = scanner.nextInt();
                scanner.nextLine();

                totalCost += item.getPrice() * quantity;
                order.put(item, quantity);
                System.out.println(quantity + "x " + item.getName() + " added to your order.");
            } else {
                System.out.println("Food item not found. Please try again.");
            }
        }

        System.out.println("Your order:");
        for (Map.Entry<FoodItem, Integer> entry : order.entrySet()) {
            FoodItem item = entry.getKey();
            int quantity = entry.getValue();
            System.out.println(quantity + "x " + item.getName() + " - $" + (item.getPrice() * quantity));
        }

        System.out.println("Total Cost: $" + totalCost);
        System.out.println("Thank you for your order!");
    }
}